name: CI
on:
  pull_request:
    branches:
      - dev-v2.6
      - release-v2.6
      - main

# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
jobs:
  setup-terraform:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # creating required environment variables for openstack connection
      - name: Setup dependencies
        run: |
          SUSEConnect -p sle-module-basesystem/15.3/x86_64
          zypper install -y unzip-6.00-4.8.13
          zypper install -y jq
          zypper install -y which
          zypper install patch

      # Install terraform on self-hosted VM if it doesn't exist
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
          terraform_wrapper: false

  validate-charts:
    needs: [setup-terraform]
    runs-on: self-hosted
    steps:
      # Checking that charts are up to date and can be merged
      - name: Checkout into branch
        run: |
          git checkout -b staging-pr-workflow
        
      - name: Pull scripts
        run: make pull-scripts

      - name: Validate 
        run: make validate

  prepare-environment:
    needs: [validate-charts]
    runs-on: self-hosted
    steps:
      - name: Get Base Repo
        run: |
          mkdir openstack_env
          cd openstack_env
          git clone --recurse-submodules https://gitlab.suse.de/mkravec/scripts.git
      
      - name: Build Validator Container Image
        run: |
          cd openstack_env/scripts
          cp  ~/developer-s390-openrc.sh env.conf
          ./varke build
          
  run-tests:
    needs: [prepare-environment]
    runs-on: self-hosted
    steps:
      # Testing longhart chart in the rancher/s390x/charts repo by setting workdir before helm upgrade
      - name: Run Tests for Longhorn Chart
        id: lh
        run: |
          export last_created_dir=$(ls -td charts/longhorn/* | head -1)
          sed -i '/^helm upgrade --install=true longhorn.*/i git clone -n https://github.com/rancher/s390x-charts.git && cd s390x-charts.git && git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin '"${GITHUB_REF}"' && git checkout -qf FETCH_HEAD && cd '"${last_created_dir}"'' openstack_env/scripts/tests_s390x/longhorn.sh
          cd openstack_env/scripts
          cp  ~/developer-s390-openrc.sh env.conf
          chmod 400 data/id_shared
          sed -i 's/\-it//g' varke 
          ./varke run -n 1:2 -t longhorn -e SUFFIX=s390x-charts-lh -e INTEGRATION=1 -k
          echo ::set-output name=cluster::"$(ls | grep 'cluster')"

      - name: Upload # upload event file
        uses: actions/upload-artifact@v2
        with:
          name: Event File
          path: ${{ github.event_path }}

      - name: Upload Test Results
        uses: actions/upload-artifact@v2  # upload test results
        with:
          name: test-results
          path: "openstack_env/scripts/${{ steps.lh.outputs.cluster }}/logs/longhorn-test-junit-report.xml"

  destroy-vm:
    needs: [run-tests]
    runs-on: self-hosted
    if: ${{ always() }}
    steps:
      - name: Destroy VM and Clean Cluster
        run: |
          cd openstack_env/scripts
          source /root/developer-s390-openrc.sh
          export cluster=$(ls | grep 'cluster')
          cd $cluster/terraform
          terraform destroy --auto-approve
